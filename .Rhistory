library(cli)
read_sheet("https://docs.google.com/spreadsheets/d/1U7ThHrCBM04LA3LbLbo3RMqvAVy60lpI6NTCvIi7KLY/edit?usp=sharing",
1)
?cli_abort
?abort
?cli::abort
remotes::install_github("r-lib/cli")
remotes::install_github("r-lib/cli")
#install.packages("googlesheets4")
#remotes::install_github("r-lib/cli")
library(googlesheets4)
library(cli)
read_sheet("https://docs.google.com/spreadsheets/d/1U7ThHrCBM04LA3LbLbo3RMqvAVy60lpI6NTCvIi7KLY/edit?usp=sharing",
1)
install.packages('gsheet')
library(gsheet)
gsheet2tbl("https://docs.google.com/spreadsheets/d/1U7ThHrCBM04LA3LbLbo3RMqvAVy60lpI6NTCvIi7KLY/edit?usp=sharing",
1)
gsheet2tbl("https://docs.google.com/spreadsheets/d/1U7ThHrCBM04LA3LbLbo3RMqvAVy60lpI6NTCvIi7KLY/edit?usp=sharing",1)
grades <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1U7ThHrCBM04LA3LbLbo3RMqvAVy60lpI6NTCvIi7KLY/edit?usp=sharing",1)
View(grades)
library(ggplot2)
ggplot(grades, aes(x="гр", y="Летучка 1")) +
geom_boxplot()
View(grades)
names(grades)
ggplot(grades, aes(x=names(grades)[2], y=names(grades)[4])) +
geom_boxplot()
ggplot(grades, aes(x=гр, y=Летучка 1)) +
geom_boxplot()
ggplot(grades) +
geom_boxplot()
colnames(grades) <- c("Name", "Group", "email", "Quiz1")
ggplot(grades, aes(x=Group,y=Quiz1)) +
geom_boxplot()
source('~/ECOX21/teeth_example.R', encoding = 'koi8-r')
library(datasets)
library(sandwich)
library(lmtest)
library(stargazer)
###############
#  ДАННЫЕ     #
###############
# загружаем данные
data("ToothGrowth")
force(ToothGrowth)
?data
# переменные для текущей работы
y <- ToothGrowth$len    #длина зубов
x <- ToothGrowth$dose   #доза витамина
# диаграмма рассеивания для наших данных
plot(x = x,y = y,
main = "Диаграмма рассеивания",
xlab = "Доза витамана C, мг",
ylab = "Длина зубов, мм")
# диаграмма рассеивания для наших данных
plot(x = log(x),y = log(y),
main = "Диаграмма рассеивания",
xlab = "Доза витамана C, мм, log-шкала",
ylab = "Длина зубов, мг, log-шкала")
b11 <- cov(log(x),log(y))/var(log(x))
b01 <- mean(log(y)) - b11*mean(log(x))
abline(b01,b11)
# оценка парной регрессии
m2  <- lm(log(len)~1+log(dose), data=ToothGrowth)
cf2 <- coeftest(m2, df=Inf, vcov=vcovHC)
# вывод результатов
stargazer(m1, cf1, m2, cf2,type='text')
# подгружаем пакеты
library(datasets)
library(sandwich)
library(lmtest)
library(stargazer)
##################################
#             ДАННЫЕ             #
##################################
# загружаем данные
# краткое описание данных по ссылке (детали - в статье):
# https://stat.ethz.ch/R-manual/R-devel/library/datasets/html/ToothGrowth.html
data("ToothGrowth")
# переменные для текущей работы
y <- ToothGrowth$len    #длина зубов
x <- ToothGrowth$dose   #доза витамина
# диаграмма рассеивания для наших данных
plot(x = x,y = y,
main = "Диаграмма рассеивания",
xlab = "Доза витамана C, мг",
ylab = "Длина зубов, мм")
##################################
#           РЕГРЕССИЯ            #
##################################
# оценки МНК парной линейной регрессии
# без функции lm(), просто алгебра
b1 <- cov(x,y)/var(x)
b0 <- mean(y) - b1*mean(x)
# дорисовываем на график регрессионную линию
abline(b0,b1)
# оценка парной регрессии МНК, функция lm()
m1 <- lm(len~1+dose, data=ToothGrowth)
# оценка стандартных ошибок, робастная формула
cf1 <- coeftest(m1, df=Inf, vcov=vcovHC)
# вывод результатов в таблицу
stargazer(m1,cf1,type='text')
##################################
#     АЛЬТЕРНАТИВНАЯ МОДЕЛЬ      #
##################################
# В этом пункте вкратце все предыдущие упражнения
# проделаны для альтернативной модели в log-log форме
#развед-анализ
plot(x = log(x),y = log(y),
main = "Диаграмма рассеивания",
xlab = "Доза витамана C, мм, log-шкала",
ylab = "Длина зубов, мг, log-шкала")
b11 <- cov(log(x),log(y))/var(log(x))
b01 <- mean(log(y)) - b11*mean(log(x))
abline(b01,b11)
# оценка парной регрессии
m2  <- lm(log(len)~1+log(dose), data=ToothGrowth)
cf2 <- coeftest(m2, df=Inf, vcov=vcovHC)
# вывод результатов
stargazer(m1, cf1, m2, cf2,type='text')
# вывод результатов
stargazer(m2, cf2,type='text')
xplot <- seq(-4,4,by=0.01)
fplot <- dnorm(xplot)
plot(xplt, fplot, type='l')
plot(xplot, fplot, type='l')
plot(xplot, fplot, type='l',
xlab='Значения t-статистики',
ylab="pdf",
main="Плотность N(0,1)")
# диаграмма рассеивания для наших данных
plot(x = x,y = y,
main = "Диаграмма рассеивания",
xlab = "Доза витамана C, мг",
ylab = "Длина зубов, мм")
plot(xplot, fplot, type='l',
xlab='Значения t-статистики',
ylab="pdf",
main="Плотность N(0,1)")
plot(xplot, fplot, type='l',
xlab='Значения t-статистики',
ylab="pdf",
main="Плотность N(0,1)")
plot(xplot, fplot, type='l',
xlab='Значения t-статистики',
ylab="pdf",
main="Плотность N(0,1)")
xplot <- seq(-4,4,by=0.01)
fplot <- dnorm(xplot)
plot(xplot, fplot, type='l',
xlab='Значения t-статистики',
ylab="pdf",
main="Плотность N(0,1)")
xplot <- seq(-4,4,by=0.01)
fplot <- dnorm(xplot)
plot(xplot, fplot, type='l',
xlab='Значения t-статистики',
ylab="pdf",
main="Плотность N(0,1)")
######################################
#                                    #
#      The Effect of Vitamin C       #
#   on Tooth Growth in Guinea Pigs   #
#                                    #
#         Владимир Пырлик            #
#           ЭКОНОМЕТРИКА             #
#                                    #
#             Неделя 3               #
#    Эмпирический пример по теме     #
#    "Парная линейная регрессия"     #
#                                    #
######################################
# На основе данных из работы
# Crampton, E. W. (1947). The growth of the odontoblast
# of the incisor teeth as a criterion of vitamin C intake
# of the guinea pig. The Journal of Nutrition, 33(5),
# 491--504. 10.1093/jn/33.5.491.
##################################
#             ПАКЕТЫ             #
##################################
# установка пакетов, запускать один раз или для обновления
#install.packages(c("datasets,
#                   sandwich,
#                   lmtest,
#                   stargazer"))
# подгружаем пакеты
library(datasets)
library(sandwich)
library(lmtest)
library(stargazer)
##################################
#             ДАННЫЕ             #
##################################
# загружаем данные
# краткое описание данных по ссылке (детали - в статье):
# https://stat.ethz.ch/R-manual/R-devel/library/datasets/html/ToothGrowth.html
data("ToothGrowth")
# переменные для текущей работы
y <- ToothGrowth$len    #длина зубов
x <- ToothGrowth$dose   #доза витамина
# диаграмма рассеивания для наших данных
plot(x = x,y = y,
main = "Диаграмма рассеивания",
xlab = "Доза витамана C, мг",
ylab = "Длина зубов, мм")
##################################
#           РЕГРЕССИЯ            #
##################################
# оценки МНК парной линейной регрессии
# без функции lm(), просто алгебра
b1 <- cov(x,y)/var(x)
b0 <- mean(y) - b1*mean(x)
# дорисовываем на график регрессионную линию
abline(b0,b1)
# оценка парной регрессии МНК, функция lm()
m1 <- lm(len~1+dose, data=ToothGrowth)
# оценка стандартных ошибок, робастная формула
cf1 <- coeftest(m1, df=Inf, vcov=vcovHC)
cf1
cf1$estimate
cf1[1]
cf1[1,1]
cf1[2,3]
##################################
#      ПРОВЕРКА ГИПОТЕЗЫ         #
##################################
t1 <- cf1[2,1]/cf1[2,2]
t1
Pv1 <- 1-dnorm(t1)
Pv1
Pv1 <- 1-pnorm(t1)
Pv1
pnorm(t1)
plot(x = log(x),y = log(y),
main = "Диаграмма рассеивания",
xlab = "Доза витамана C, мм, log-шкала",
ylab = "Длина зубов, мг, log-шкала")
b11 <- cov(log(x),log(y))/var(log(x))
b01 <- mean(log(y)) - b11*mean(log(x))
abline(b01,b11)
m2  <- lm(log(len)~1+log(dose), data=ToothGrowth)
cf2 <- coeftest(m2, df=Inf, vcov=vcovHC)
stargazer(m2, cf2,type='text')
t2  <- cf2[2,1]/cf1[2,2]
Pv2 <- 1-pnorm(t2)
Pv2
cf2
t2
t2  <- cf2[2,1]/cf2[2,2]
Pv2 <- 1-pnorm(t2)
Pv2
library(datasets)
library(sandwich)
library(lmtest)
library(stargazer)
##################################
#             ДАННЫЕ             #
##################################
# загружаем данные
# краткое описание данных по ссылке (детали - в статье):
# https://stat.ethz.ch/R-manual/R-devel/library/datasets/html/ToothGrowth.html
data("ToothGrowth")
force(ToothGrowth)
View(ToothGrowth)
# переменные для текущей работы
y <- ToothGrowth$len    #длина зубов
x <- ToothGrowth$dose   #доза витамина
# диаграмма рассеивания для наших данных
plot(x = x,y = y,
main = "Диаграмма рассеивания",
xlab = "Доза витамана C, мг",
ylab = "Длина зубов, мм")
##################################
#           РЕГРЕССИЯ            #
##################################
# оценки МНК парной линейной регрессии
# без функции lm(), просто алгебра
b1 <- cov(x,y)/var(x)
b0 <- mean(y) - b1*mean(x)
# дорисовываем на график регрессионную линию
abline(b0,b1)
# оценка парной регрессии МНК, функция lm()
m1 <- lm(len~1+dose, data=ToothGrowth)
View(m1)
# оценка стандартных ошибок, робастная формула
cf1 <- coeftest(m1, df=Inf, vcov=vcovHC)
# вывод результатов в таблицу
stargazer(m1,cf1,type='text')
cf1
##################################
#      ПРОВЕРКА ГИПОТЕЗЫ         #
##################################
t1  <- cf1[2,1]/cf1[2,2]
t1
Pv1 <- 1-pnorm(t1) #1-сторонняя!!!
Pv1
data("ToothGrowth")
force(ToothGrowth)
View(ToothGrowth)
require(graphics)
coplot(len ~ dose | supp, data = ToothGrowth, panel = panel.smooth,
xlab = "ToothGrowth data: length vs dose, given type of supplement")
setwd("~/ECOX21")
dta <- read.table("hospitaldata.txt")
library(sandwich)
library(lmtest)
library(stargazer)
##################################
#             ДАННЫЕ             #
##################################
# загружаем данные
setwd("~/ECOX21")
dta <- read.table("hospitaldata.txt")
View(dta)
dta <- read.csv("hospitaldata.txt")
dta <- read.csv2("hospitaldata.txt")
dta <- read.csv("hospitaldata.txt",sep='tab')
dta <- read.csv("hospitaldata.txt",sep='/tab')
dta <- read.table("hospitaldata.txt")
dta <- read.table("hospitaldata.txt",header=TRUE)
View(dta)
# матрицы с данными
Y <- dta$InfctRsk
X <- cbind(intercept = rep(1,nrow(dta)),
stay      = dta$Stay,
age       = dta$Age,
beds      = dta$Beds)
t(X)%*%X
inv(t(X)%*%X)%*%X%*%t(Y)
(t(X)%*%X)^(-1)%*%X%*%t(Y)
((t(X)%*%X)^(-1))%*%X%*%t(Y)
t(X)%*%Y
solve(t(X)%*%X)%*%t(X)%*%Y
# матрицы с данными
n <- nrow(dta)
hatQxx = t(X)%*%X/n
hatQxy = t(X)%*%Y/n
hatQxx1 = solve(hatQxx)
hatbeta <- hatQxx1 %*% hatQxy
hatU    <- Y - X%*%hatbeta
hatV1   <- var(U)*hatQxx1
hatV1   <- var(hatU)*hatQxx1
var(hatU)
hatQxx1
hatU
hatV1   <- var(hatU)%*%hatQxx1
hatV1   <- var(hatU)*hatQxx1
hatV1   <- as.numeric(var(hatU))*hatQxx1
hatV1
hatEu2xx <- sapply(1:n,function(i) t(X[i,])%*%X[i,]*U[i]^2)
hatU
hatEu2xx <- sapply(1:n,function(i) t(X[i,])%*%X[i,]*hatU[i,1]^2)
hatEu2xx
hatEu2xx <- lapply(1:n,function(i) t(X[i,])%*%X[i,]*hatU[i,1]^2)
hatEu2xx
hatEu2xx <- lapply(1:n,function(i) X[i,]%*%t(X[i,])*hatU[i,1]^2)
hatEu2xx
hatEu2xx <- sapply(1:n,function(i) X[i,]%*%t(X[i,])*hatU[i,1]^2)
hatEu2xx
hatEu2xx <- lapply(1:n,function(i) X[i,]%*%t(X[i,])*hatU[i,1]^2)
hatEu2xx
hatEu2xx <- mean(lapply(1:n,function(i) X[i,]%*%t(X[i,])*hatU[i,1]^2))
hatEu2xx
hatEu2xx <- sum(lapply(1:n,function(i) X[i,]%*%t(X[i,])*hatU[i,1]^2))
lapply(1:n,function(i) X[i,]%*%t(X[i,])*hatU[i,1]^2)
hatOmega <- diag(hatU^2)
hatOmega
hatOmega <- diagm(hatU^2)
hatOmega <- mdiag(hatU^2)
?diag
hatOmega <- diag(as.vector(hatU)^2)
hatOmega
hatU    <- as.vector(Y - X%*%hatbeta)
hatOmega <- diag(hatU^2)
hatOmega
hatEu2xx <- t(X)%*%Omega%*%X
hatEu2xx <- t(X)%*%hatOmega%*%X
hatEu2xx <- t(X)%*%hatOmega%*%X/n
hatQxuxu <- t(X)%*%hatOmega%*%X/n
hatV2    <- hatQxx1 %*% hatQxuxu %*% hatQxx1
hatV2
hatV1
SE1 <- sqrt(diag(hatV1)/n)
SE2 <- sqrt(diag(hatV2)/n)
SE1
SE2
cbind(hatbeta, SE1, SE2)
cbind(coef = hatbeta, SE1, SE2)
X <- cbind(intercept = rep(1,n),
stay      = dta$Stay,
age       = dta$Age,
beds10    = floor(dta$Beds/10))
hatQxx  <- t(X)%*%X/n
hatQxy  <- t(X)%*%Y/n
hatQxx1 <- solve(hatQxx)
hatbeta <- hatQxx1 %*% hatQxy
hatU    <- as.vector(Y - X%*%hatbeta)
hatV1   <- as.numeric(var(hatU))*hatQxx1
hatOmega <- diag(hatU^2)
hatQxuxu <- t(X)%*%hatOmega%*%X/n
hatV2    <- hatQxx1 %*% hatQxuxu %*% hatQxx1
SE1 <- sqrt(diag(hatV1)/n)
SE2 <- sqrt(diag(hatV2)/n)
cbind(hatbeta, SE1, SE2)
# оценка МНК, функция lm()
m1 <- lm(len~1+dose, data=ToothGrowth)
# оценка МНК, функция lm()
m1 <- lm(InfctRsk~1+Stay+Age+Beds, data=dta)
# оценка стандартных ошибок, робастная формула
cf1 <- coeftest(m1, df=Inf, vcov=vcovHC)
# вывод результатов в таблицу
stargazer(m1,cf1,type='text')
cbind(hatbeta, SE1, SE2)
?vcovHC
# оценка стандартных ошибок, робастная формула
cf1 <- coeftest(m1, df=Inf, vcov=function(x) vcovHC(x,type='HC0'))
# вывод результатов в таблицу
stargazer(m1,cf1,type='text')
cbind(hatbeta, SE1, SE2)
# оценка стандартных ошибок, робастная формула
cf1 <- coeftest(m1, df=Inf, vcov=vcovHC, type='HC0')
# вывод результатов в таблицу
stargazer(m1,cf1,type='text')
# оценка стандартных ошибок, робастная формула
cf1 <- coeftest(m1, df=Inf, vcov=vcovHC)
# вывод результатов в таблицу
stargazer(m1,cf1,type='text')
#  Open with Encoding Windows 1251   #
######################################
#                                    #
#  О риске инфекционного заражения   #
#      в американских больницах      #
#                                    #
#         Владимир Пырлик            #
#           ЭКОНОМЕТРИКА             #
#                                    #
#             Неделя 4               #
#    Эмпирический пример по теме     #
# "Множественная линейная регрессия" #
#                                    #
######################################
# На основе данных из учебника
# Applied Linear Regression Models (McGraw Hill/Irwin Series:
# Operations and Decision Sciences) 4th Edition
##################################
#             ПАКЕТЫ             #
##################################
# установка пакетов, запускать один раз или для обновления
#install.packages(c("datasets,
#                   lmtest,
#                   stargazer"))
# подгружаем пакеты
library(sandwich)
library(lmtest)
library(stargazer)
##################################
#             ДАННЫЕ             #
##################################
# загружаем данные
setwd("~/ECOX21")
dta <- read.table("hospitaldata.txt", header=TRUE)
##################################
#           РЕГРЕССИЯ            #
##################################
## работа "вручную"
# количество наблюдений
n <- nrow(dta)
# матрицы с данными
Y <- dta$InfctRsk
X <- cbind(intercept = rep(1,n),
stay      = dta$Stay,
age       = dta$Age,
beds      = dta$Beds)
# компоненты для вычисления оценок
hatQxx  <- t(X)%*%X/n
hatQxy  <- t(X)%*%Y/n
hatQxx1 <- solve(hatQxx)
# оценки МНК
hatbeta <- hatQxx1 %*% hatQxy
# вектор остатков
hatU    <- as.vector(Y - X%*%hatbeta)
# не-робастная оценка матрицы ковариаций оценок
hatV1   <- var(hatU)*hatQxx1
# робастная (метод Уайта) оценка матрицы ковариаций оценок
hatVxu <- t(X) %*% diag(hatU^2) %*% X/n
hatV2  <- hatQxx1 %*% hatVxu %*% hatQxx1
# две версии стандартных ошибок
SE1 <- sqrt(diag(hatV1)/n) # не-робастные SE
SE2 <- sqrt(diag(hatV2)/n) # робастные SE (White's)
# "таблица" с результатами
cbind(hatbeta, SE1, SE2)
## работа встроенными средствами
# оценка МНК, функция lm()
m1 <- lm(InfctRsk ~ 1 + Stay + Age + Beds, data=dta)
# оценка стандартных ошибок, робастная формула
cf1 <- coeftest(m1, df=Inf, vcov=vcovHC)
# вывод результатов в таблицу
stargazer(m1,cf1,type='text')
##################################
#      ПРОВЕРКА ГИПОТЕЗЫ         #
##################################
t1  <- cf1[2,1]/cf1[2,2]
Pv1 <- 1-pnorm(t1) #1-сторонняя!!!
cf1
cf1[2,1]
##################################
#      ПРОВЕРКА ГИПОТЕЗЫ         #
##################################
t1  <- cf1[4,1]/cf1[4,2]
Pv1 <- 1-pnorm(t1) #1-сторонняя!!!
Pv1
